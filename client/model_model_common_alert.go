/*
Deepfence ThreatStryker

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: v2.5.6
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModelCommonAlert type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelCommonAlert{}

// ModelCommonAlert struct for ModelCommonAlert
type ModelCommonAlert struct {
	Category string `json:"category"`
	ContainerName string `json:"container_name"`
	Count int32 `json:"count"`
	CreatedAt int32 `json:"created_at"`
	EventType string `json:"event_type"`
	Geoip string `json:"geoip"`
	HostName string `json:"host_name"`
	KubernetesClusterName string `json:"kubernetes_cluster_name"`
	Masked bool `json:"masked"`
	Matched string `json:"matched"`
	NodeId string `json:"node_id"`
	NodeType string `json:"node_type"`
	PodName string `json:"pod_name"`
	RuleId string `json:"rule_id"`
	Severity string `json:"severity"`
	Summary string `json:"summary"`
	Tactics []string `json:"tactics"`
	Techniques []string `json:"techniques"`
	UpdatedAt int32 `json:"updated_at"`
}

type _ModelCommonAlert ModelCommonAlert

// NewModelCommonAlert instantiates a new ModelCommonAlert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelCommonAlert(category string, containerName string, count int32, createdAt int32, eventType string, geoip string, hostName string, kubernetesClusterName string, masked bool, matched string, nodeId string, nodeType string, podName string, ruleId string, severity string, summary string, tactics []string, techniques []string, updatedAt int32) *ModelCommonAlert {
	this := ModelCommonAlert{}
	this.Category = category
	this.ContainerName = containerName
	this.Count = count
	this.CreatedAt = createdAt
	this.EventType = eventType
	this.Geoip = geoip
	this.HostName = hostName
	this.KubernetesClusterName = kubernetesClusterName
	this.Masked = masked
	this.Matched = matched
	this.NodeId = nodeId
	this.NodeType = nodeType
	this.PodName = podName
	this.RuleId = ruleId
	this.Severity = severity
	this.Summary = summary
	this.Tactics = tactics
	this.Techniques = techniques
	this.UpdatedAt = updatedAt
	return &this
}

// NewModelCommonAlertWithDefaults instantiates a new ModelCommonAlert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelCommonAlertWithDefaults() *ModelCommonAlert {
	this := ModelCommonAlert{}
	return &this
}

// GetCategory returns the Category field value
func (o *ModelCommonAlert) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *ModelCommonAlert) SetCategory(v string) {
	o.Category = v
}

// GetContainerName returns the ContainerName field value
func (o *ModelCommonAlert) GetContainerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContainerName
}

// GetContainerNameOk returns a tuple with the ContainerName field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetContainerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerName, true
}

// SetContainerName sets field value
func (o *ModelCommonAlert) SetContainerName(v string) {
	o.ContainerName = v
}

// GetCount returns the Count field value
func (o *ModelCommonAlert) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *ModelCommonAlert) SetCount(v int32) {
	o.Count = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ModelCommonAlert) GetCreatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetCreatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ModelCommonAlert) SetCreatedAt(v int32) {
	o.CreatedAt = v
}

// GetEventType returns the EventType field value
func (o *ModelCommonAlert) GetEventType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetEventTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *ModelCommonAlert) SetEventType(v string) {
	o.EventType = v
}

// GetGeoip returns the Geoip field value
func (o *ModelCommonAlert) GetGeoip() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Geoip
}

// GetGeoipOk returns a tuple with the Geoip field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetGeoipOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Geoip, true
}

// SetGeoip sets field value
func (o *ModelCommonAlert) SetGeoip(v string) {
	o.Geoip = v
}

// GetHostName returns the HostName field value
func (o *ModelCommonAlert) GetHostName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetHostNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostName, true
}

// SetHostName sets field value
func (o *ModelCommonAlert) SetHostName(v string) {
	o.HostName = v
}

// GetKubernetesClusterName returns the KubernetesClusterName field value
func (o *ModelCommonAlert) GetKubernetesClusterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KubernetesClusterName
}

// GetKubernetesClusterNameOk returns a tuple with the KubernetesClusterName field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetKubernetesClusterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KubernetesClusterName, true
}

// SetKubernetesClusterName sets field value
func (o *ModelCommonAlert) SetKubernetesClusterName(v string) {
	o.KubernetesClusterName = v
}

// GetMasked returns the Masked field value
func (o *ModelCommonAlert) GetMasked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Masked
}

// GetMaskedOk returns a tuple with the Masked field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetMaskedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Masked, true
}

// SetMasked sets field value
func (o *ModelCommonAlert) SetMasked(v bool) {
	o.Masked = v
}

// GetMatched returns the Matched field value
func (o *ModelCommonAlert) GetMatched() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Matched
}

// GetMatchedOk returns a tuple with the Matched field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetMatchedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Matched, true
}

// SetMatched sets field value
func (o *ModelCommonAlert) SetMatched(v string) {
	o.Matched = v
}

// GetNodeId returns the NodeId field value
func (o *ModelCommonAlert) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *ModelCommonAlert) SetNodeId(v string) {
	o.NodeId = v
}

// GetNodeType returns the NodeType field value
func (o *ModelCommonAlert) GetNodeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetNodeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeType, true
}

// SetNodeType sets field value
func (o *ModelCommonAlert) SetNodeType(v string) {
	o.NodeType = v
}

// GetPodName returns the PodName field value
func (o *ModelCommonAlert) GetPodName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PodName
}

// GetPodNameOk returns a tuple with the PodName field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetPodNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PodName, true
}

// SetPodName sets field value
func (o *ModelCommonAlert) SetPodName(v string) {
	o.PodName = v
}

// GetRuleId returns the RuleId field value
func (o *ModelCommonAlert) GetRuleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetRuleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleId, true
}

// SetRuleId sets field value
func (o *ModelCommonAlert) SetRuleId(v string) {
	o.RuleId = v
}

// GetSeverity returns the Severity field value
func (o *ModelCommonAlert) GetSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *ModelCommonAlert) SetSeverity(v string) {
	o.Severity = v
}

// GetSummary returns the Summary field value
func (o *ModelCommonAlert) GetSummary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *ModelCommonAlert) SetSummary(v string) {
	o.Summary = v
}

// GetTactics returns the Tactics field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ModelCommonAlert) GetTactics() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tactics
}

// GetTacticsOk returns a tuple with the Tactics field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelCommonAlert) GetTacticsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tactics) {
		return nil, false
	}
	return o.Tactics, true
}

// SetTactics sets field value
func (o *ModelCommonAlert) SetTactics(v []string) {
	o.Tactics = v
}

// GetTechniques returns the Techniques field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ModelCommonAlert) GetTechniques() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Techniques
}

// GetTechniquesOk returns a tuple with the Techniques field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelCommonAlert) GetTechniquesOk() ([]string, bool) {
	if o == nil || IsNil(o.Techniques) {
		return nil, false
	}
	return o.Techniques, true
}

// SetTechniques sets field value
func (o *ModelCommonAlert) SetTechniques(v []string) {
	o.Techniques = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ModelCommonAlert) GetUpdatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetUpdatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ModelCommonAlert) SetUpdatedAt(v int32) {
	o.UpdatedAt = v
}

func (o ModelCommonAlert) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelCommonAlert) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category"] = o.Category
	toSerialize["container_name"] = o.ContainerName
	toSerialize["count"] = o.Count
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["event_type"] = o.EventType
	toSerialize["geoip"] = o.Geoip
	toSerialize["host_name"] = o.HostName
	toSerialize["kubernetes_cluster_name"] = o.KubernetesClusterName
	toSerialize["masked"] = o.Masked
	toSerialize["matched"] = o.Matched
	toSerialize["node_id"] = o.NodeId
	toSerialize["node_type"] = o.NodeType
	toSerialize["pod_name"] = o.PodName
	toSerialize["rule_id"] = o.RuleId
	toSerialize["severity"] = o.Severity
	toSerialize["summary"] = o.Summary
	if o.Tactics != nil {
		toSerialize["tactics"] = o.Tactics
	}
	if o.Techniques != nil {
		toSerialize["techniques"] = o.Techniques
	}
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *ModelCommonAlert) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category",
		"container_name",
		"count",
		"created_at",
		"event_type",
		"geoip",
		"host_name",
		"kubernetes_cluster_name",
		"masked",
		"matched",
		"node_id",
		"node_type",
		"pod_name",
		"rule_id",
		"severity",
		"summary",
		"tactics",
		"techniques",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelCommonAlert := _ModelCommonAlert{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModelCommonAlert)

	if err != nil {
		return err
	}

	*o = ModelCommonAlert(varModelCommonAlert)

	return err
}

type NullableModelCommonAlert struct {
	value *ModelCommonAlert
	isSet bool
}

func (v NullableModelCommonAlert) Get() *ModelCommonAlert {
	return v.value
}

func (v *NullableModelCommonAlert) Set(val *ModelCommonAlert) {
	v.value = val
	v.isSet = true
}

func (v NullableModelCommonAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableModelCommonAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelCommonAlert(val *ModelCommonAlert) *NullableModelCommonAlert {
	return &NullableModelCommonAlert{value: val, isSet: true}
}

func (v NullableModelCommonAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelCommonAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


