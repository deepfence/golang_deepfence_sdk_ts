/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelCommonAlert type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelCommonAlert{}

// ModelCommonAlert struct for ModelCommonAlert
type ModelCommonAlert struct {
	Category string `json:"category"`
	Count int32 `json:"count"`
	CreatedAt int32 `json:"created_at"`
	EventType string `json:"event_type"`
	Masked bool `json:"masked"`
	NodeId string `json:"node_id"`
	Severity string `json:"severity"`
	Summary string `json:"summary"`
	Tactic []string `json:"tactic"`
	Technique []string `json:"technique"`
	UpdatedAt int32 `json:"updated_at"`
}

// NewModelCommonAlert instantiates a new ModelCommonAlert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelCommonAlert(category string, count int32, createdAt int32, eventType string, masked bool, nodeId string, severity string, summary string, tactic []string, technique []string, updatedAt int32) *ModelCommonAlert {
	this := ModelCommonAlert{}
	this.Category = category
	this.Count = count
	this.CreatedAt = createdAt
	this.EventType = eventType
	this.Masked = masked
	this.NodeId = nodeId
	this.Severity = severity
	this.Summary = summary
	this.Tactic = tactic
	this.Technique = technique
	this.UpdatedAt = updatedAt
	return &this
}

// NewModelCommonAlertWithDefaults instantiates a new ModelCommonAlert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelCommonAlertWithDefaults() *ModelCommonAlert {
	this := ModelCommonAlert{}
	return &this
}

// GetCategory returns the Category field value
func (o *ModelCommonAlert) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *ModelCommonAlert) SetCategory(v string) {
	o.Category = v
}

// GetCount returns the Count field value
func (o *ModelCommonAlert) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *ModelCommonAlert) SetCount(v int32) {
	o.Count = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ModelCommonAlert) GetCreatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetCreatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ModelCommonAlert) SetCreatedAt(v int32) {
	o.CreatedAt = v
}

// GetEventType returns the EventType field value
func (o *ModelCommonAlert) GetEventType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetEventTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *ModelCommonAlert) SetEventType(v string) {
	o.EventType = v
}

// GetMasked returns the Masked field value
func (o *ModelCommonAlert) GetMasked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Masked
}

// GetMaskedOk returns a tuple with the Masked field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetMaskedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Masked, true
}

// SetMasked sets field value
func (o *ModelCommonAlert) SetMasked(v bool) {
	o.Masked = v
}

// GetNodeId returns the NodeId field value
func (o *ModelCommonAlert) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *ModelCommonAlert) SetNodeId(v string) {
	o.NodeId = v
}

// GetSeverity returns the Severity field value
func (o *ModelCommonAlert) GetSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *ModelCommonAlert) SetSeverity(v string) {
	o.Severity = v
}

// GetSummary returns the Summary field value
func (o *ModelCommonAlert) GetSummary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *ModelCommonAlert) SetSummary(v string) {
	o.Summary = v
}

// GetTactic returns the Tactic field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ModelCommonAlert) GetTactic() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tactic
}

// GetTacticOk returns a tuple with the Tactic field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelCommonAlert) GetTacticOk() ([]string, bool) {
	if o == nil || IsNil(o.Tactic) {
		return nil, false
	}
	return o.Tactic, true
}

// SetTactic sets field value
func (o *ModelCommonAlert) SetTactic(v []string) {
	o.Tactic = v
}

// GetTechnique returns the Technique field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ModelCommonAlert) GetTechnique() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Technique
}

// GetTechniqueOk returns a tuple with the Technique field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelCommonAlert) GetTechniqueOk() ([]string, bool) {
	if o == nil || IsNil(o.Technique) {
		return nil, false
	}
	return o.Technique, true
}

// SetTechnique sets field value
func (o *ModelCommonAlert) SetTechnique(v []string) {
	o.Technique = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ModelCommonAlert) GetUpdatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ModelCommonAlert) GetUpdatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ModelCommonAlert) SetUpdatedAt(v int32) {
	o.UpdatedAt = v
}

func (o ModelCommonAlert) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelCommonAlert) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category"] = o.Category
	toSerialize["count"] = o.Count
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["event_type"] = o.EventType
	toSerialize["masked"] = o.Masked
	toSerialize["node_id"] = o.NodeId
	toSerialize["severity"] = o.Severity
	toSerialize["summary"] = o.Summary
	if o.Tactic != nil {
		toSerialize["tactic"] = o.Tactic
	}
	if o.Technique != nil {
		toSerialize["technique"] = o.Technique
	}
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

type NullableModelCommonAlert struct {
	value *ModelCommonAlert
	isSet bool
}

func (v NullableModelCommonAlert) Get() *ModelCommonAlert {
	return v.value
}

func (v *NullableModelCommonAlert) Set(val *ModelCommonAlert) {
	v.value = val
	v.isSet = true
}

func (v NullableModelCommonAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableModelCommonAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelCommonAlert(val *ModelCommonAlert) *NullableModelCommonAlert {
	return &NullableModelCommonAlert{value: val, isSet: true}
}

func (v NullableModelCommonAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelCommonAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


