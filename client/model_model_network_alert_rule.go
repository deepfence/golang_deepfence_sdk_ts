/*
Deepfence ThreatStryker

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: v2.5.2
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModelNetworkAlertRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelNetworkAlertRule{}

// ModelNetworkAlertRule struct for ModelNetworkAlertRule
type ModelNetworkAlertRule struct {
	Category string `json:"category"`
	Description string `json:"description"`
	Masked bool `json:"masked"`
	NodeId string `json:"node_id"`
	Payload string `json:"payload"`
	RuleId string `json:"rule_id"`
	Severity string `json:"severity"`
	Summary string `json:"summary"`
	Tactics []string `json:"tactics"`
	Techniques []string `json:"techniques"`
	UpdatedAt int32 `json:"updated_at"`
}

type _ModelNetworkAlertRule ModelNetworkAlertRule

// NewModelNetworkAlertRule instantiates a new ModelNetworkAlertRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelNetworkAlertRule(category string, description string, masked bool, nodeId string, payload string, ruleId string, severity string, summary string, tactics []string, techniques []string, updatedAt int32) *ModelNetworkAlertRule {
	this := ModelNetworkAlertRule{}
	this.Category = category
	this.Description = description
	this.Masked = masked
	this.NodeId = nodeId
	this.Payload = payload
	this.RuleId = ruleId
	this.Severity = severity
	this.Summary = summary
	this.Tactics = tactics
	this.Techniques = techniques
	this.UpdatedAt = updatedAt
	return &this
}

// NewModelNetworkAlertRuleWithDefaults instantiates a new ModelNetworkAlertRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelNetworkAlertRuleWithDefaults() *ModelNetworkAlertRule {
	this := ModelNetworkAlertRule{}
	return &this
}

// GetCategory returns the Category field value
func (o *ModelNetworkAlertRule) GetCategory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *ModelNetworkAlertRule) GetCategoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *ModelNetworkAlertRule) SetCategory(v string) {
	o.Category = v
}

// GetDescription returns the Description field value
func (o *ModelNetworkAlertRule) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ModelNetworkAlertRule) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ModelNetworkAlertRule) SetDescription(v string) {
	o.Description = v
}

// GetMasked returns the Masked field value
func (o *ModelNetworkAlertRule) GetMasked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Masked
}

// GetMaskedOk returns a tuple with the Masked field value
// and a boolean to check if the value has been set.
func (o *ModelNetworkAlertRule) GetMaskedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Masked, true
}

// SetMasked sets field value
func (o *ModelNetworkAlertRule) SetMasked(v bool) {
	o.Masked = v
}

// GetNodeId returns the NodeId field value
func (o *ModelNetworkAlertRule) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *ModelNetworkAlertRule) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *ModelNetworkAlertRule) SetNodeId(v string) {
	o.NodeId = v
}

// GetPayload returns the Payload field value
func (o *ModelNetworkAlertRule) GetPayload() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *ModelNetworkAlertRule) GetPayloadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *ModelNetworkAlertRule) SetPayload(v string) {
	o.Payload = v
}

// GetRuleId returns the RuleId field value
func (o *ModelNetworkAlertRule) GetRuleId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value
// and a boolean to check if the value has been set.
func (o *ModelNetworkAlertRule) GetRuleIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RuleId, true
}

// SetRuleId sets field value
func (o *ModelNetworkAlertRule) SetRuleId(v string) {
	o.RuleId = v
}

// GetSeverity returns the Severity field value
func (o *ModelNetworkAlertRule) GetSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *ModelNetworkAlertRule) GetSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *ModelNetworkAlertRule) SetSeverity(v string) {
	o.Severity = v
}

// GetSummary returns the Summary field value
func (o *ModelNetworkAlertRule) GetSummary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *ModelNetworkAlertRule) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *ModelNetworkAlertRule) SetSummary(v string) {
	o.Summary = v
}

// GetTactics returns the Tactics field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ModelNetworkAlertRule) GetTactics() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tactics
}

// GetTacticsOk returns a tuple with the Tactics field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelNetworkAlertRule) GetTacticsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tactics) {
		return nil, false
	}
	return o.Tactics, true
}

// SetTactics sets field value
func (o *ModelNetworkAlertRule) SetTactics(v []string) {
	o.Tactics = v
}

// GetTechniques returns the Techniques field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ModelNetworkAlertRule) GetTechniques() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Techniques
}

// GetTechniquesOk returns a tuple with the Techniques field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelNetworkAlertRule) GetTechniquesOk() ([]string, bool) {
	if o == nil || IsNil(o.Techniques) {
		return nil, false
	}
	return o.Techniques, true
}

// SetTechniques sets field value
func (o *ModelNetworkAlertRule) SetTechniques(v []string) {
	o.Techniques = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ModelNetworkAlertRule) GetUpdatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ModelNetworkAlertRule) GetUpdatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ModelNetworkAlertRule) SetUpdatedAt(v int32) {
	o.UpdatedAt = v
}

func (o ModelNetworkAlertRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelNetworkAlertRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["category"] = o.Category
	toSerialize["description"] = o.Description
	toSerialize["masked"] = o.Masked
	toSerialize["node_id"] = o.NodeId
	toSerialize["payload"] = o.Payload
	toSerialize["rule_id"] = o.RuleId
	toSerialize["severity"] = o.Severity
	toSerialize["summary"] = o.Summary
	if o.Tactics != nil {
		toSerialize["tactics"] = o.Tactics
	}
	if o.Techniques != nil {
		toSerialize["techniques"] = o.Techniques
	}
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *ModelNetworkAlertRule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"category",
		"description",
		"masked",
		"node_id",
		"payload",
		"rule_id",
		"severity",
		"summary",
		"tactics",
		"techniques",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelNetworkAlertRule := _ModelNetworkAlertRule{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModelNetworkAlertRule)

	if err != nil {
		return err
	}

	*o = ModelNetworkAlertRule(varModelNetworkAlertRule)

	return err
}

type NullableModelNetworkAlertRule struct {
	value *ModelNetworkAlertRule
	isSet bool
}

func (v NullableModelNetworkAlertRule) Get() *ModelNetworkAlertRule {
	return v.value
}

func (v *NullableModelNetworkAlertRule) Set(val *ModelNetworkAlertRule) {
	v.value = val
	v.isSet = true
}

func (v NullableModelNetworkAlertRule) IsSet() bool {
	return v.isSet
}

func (v *NullableModelNetworkAlertRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelNetworkAlertRule(val *ModelNetworkAlertRule) *NullableModelNetworkAlertRule {
	return &NullableModelNetworkAlertRule{value: val, isSet: true}
}

func (v NullableModelNetworkAlertRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelNetworkAlertRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


