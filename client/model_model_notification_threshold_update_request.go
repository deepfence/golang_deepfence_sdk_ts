/*
Deepfence ThreatStryker

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: v2.5.2
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModelNotificationThresholdUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelNotificationThresholdUpdateRequest{}

// ModelNotificationThresholdUpdateRequest struct for ModelNotificationThresholdUpdateRequest
type ModelNotificationThresholdUpdateRequest struct {
	NotificationThresholdPercentage int32 `json:"notification_threshold_percentage"`
}

type _ModelNotificationThresholdUpdateRequest ModelNotificationThresholdUpdateRequest

// NewModelNotificationThresholdUpdateRequest instantiates a new ModelNotificationThresholdUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelNotificationThresholdUpdateRequest(notificationThresholdPercentage int32) *ModelNotificationThresholdUpdateRequest {
	this := ModelNotificationThresholdUpdateRequest{}
	this.NotificationThresholdPercentage = notificationThresholdPercentage
	return &this
}

// NewModelNotificationThresholdUpdateRequestWithDefaults instantiates a new ModelNotificationThresholdUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelNotificationThresholdUpdateRequestWithDefaults() *ModelNotificationThresholdUpdateRequest {
	this := ModelNotificationThresholdUpdateRequest{}
	return &this
}

// GetNotificationThresholdPercentage returns the NotificationThresholdPercentage field value
func (o *ModelNotificationThresholdUpdateRequest) GetNotificationThresholdPercentage() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NotificationThresholdPercentage
}

// GetNotificationThresholdPercentageOk returns a tuple with the NotificationThresholdPercentage field value
// and a boolean to check if the value has been set.
func (o *ModelNotificationThresholdUpdateRequest) GetNotificationThresholdPercentageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationThresholdPercentage, true
}

// SetNotificationThresholdPercentage sets field value
func (o *ModelNotificationThresholdUpdateRequest) SetNotificationThresholdPercentage(v int32) {
	o.NotificationThresholdPercentage = v
}

func (o ModelNotificationThresholdUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelNotificationThresholdUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["notification_threshold_percentage"] = o.NotificationThresholdPercentage
	return toSerialize, nil
}

func (o *ModelNotificationThresholdUpdateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"notification_threshold_percentage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelNotificationThresholdUpdateRequest := _ModelNotificationThresholdUpdateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModelNotificationThresholdUpdateRequest)

	if err != nil {
		return err
	}

	*o = ModelNotificationThresholdUpdateRequest(varModelNotificationThresholdUpdateRequest)

	return err
}

type NullableModelNotificationThresholdUpdateRequest struct {
	value *ModelNotificationThresholdUpdateRequest
	isSet bool
}

func (v NullableModelNotificationThresholdUpdateRequest) Get() *ModelNotificationThresholdUpdateRequest {
	return v.value
}

func (v *NullableModelNotificationThresholdUpdateRequest) Set(val *ModelNotificationThresholdUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelNotificationThresholdUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelNotificationThresholdUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelNotificationThresholdUpdateRequest(val *ModelNotificationThresholdUpdateRequest) *NullableModelNotificationThresholdUpdateRequest {
	return &NullableModelNotificationThresholdUpdateRequest{value: val, isSet: true}
}

func (v NullableModelNotificationThresholdUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelNotificationThresholdUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


