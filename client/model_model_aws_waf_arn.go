/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelAWSWafARN type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAWSWafARN{}

// ModelAWSWafARN struct for ModelAWSWafARN
type ModelAWSWafARN struct {
	Arn string `json:"arn"`
	Region string `json:"region"`
}

// NewModelAWSWafARN instantiates a new ModelAWSWafARN object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAWSWafARN(arn string, region string) *ModelAWSWafARN {
	this := ModelAWSWafARN{}
	this.Arn = arn
	this.Region = region
	return &this
}

// NewModelAWSWafARNWithDefaults instantiates a new ModelAWSWafARN object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAWSWafARNWithDefaults() *ModelAWSWafARN {
	this := ModelAWSWafARN{}
	return &this
}

// GetArn returns the Arn field value
func (o *ModelAWSWafARN) GetArn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Arn
}

// GetArnOk returns a tuple with the Arn field value
// and a boolean to check if the value has been set.
func (o *ModelAWSWafARN) GetArnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Arn, true
}

// SetArn sets field value
func (o *ModelAWSWafARN) SetArn(v string) {
	o.Arn = v
}

// GetRegion returns the Region field value
func (o *ModelAWSWafARN) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *ModelAWSWafARN) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *ModelAWSWafARN) SetRegion(v string) {
	o.Region = v
}

func (o ModelAWSWafARN) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAWSWafARN) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["arn"] = o.Arn
	toSerialize["region"] = o.Region
	return toSerialize, nil
}

type NullableModelAWSWafARN struct {
	value *ModelAWSWafARN
	isSet bool
}

func (v NullableModelAWSWafARN) Get() *ModelAWSWafARN {
	return v.value
}

func (v *NullableModelAWSWafARN) Set(val *ModelAWSWafARN) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAWSWafARN) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAWSWafARN) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAWSWafARN(val *ModelAWSWafARN) *NullableModelAWSWafARN {
	return &NullableModelAWSWafARN{value: val, isSet: true}
}

func (v NullableModelAWSWafARN) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAWSWafARN) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


