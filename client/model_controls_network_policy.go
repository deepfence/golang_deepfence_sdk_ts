/*
Deepfence ThreatStryker

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.2.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ControlsNetworkPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControlsNetworkPolicy{}

// ControlsNetworkPolicy struct for ControlsNetworkPolicy
type ControlsNetworkPolicy struct {
	Action string `json:"action"`
	CountLimit int32 `json:"count_limit"`
	DurationCountLimitSec int32 `json:"duration_count_limit_sec"`
	DurationSec int32 `json:"duration_sec"`
	Matcher ControlsPolicyAlertMatcher `json:"matcher"`
	PolicyId string `json:"policy_id"`
	UpdatedAt int64 `json:"updated_at"`
	Uuid *string `json:"uuid,omitempty"`
}

type _ControlsNetworkPolicy ControlsNetworkPolicy

// NewControlsNetworkPolicy instantiates a new ControlsNetworkPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControlsNetworkPolicy(action string, countLimit int32, durationCountLimitSec int32, durationSec int32, matcher ControlsPolicyAlertMatcher, policyId string, updatedAt int64) *ControlsNetworkPolicy {
	this := ControlsNetworkPolicy{}
	this.Action = action
	this.CountLimit = countLimit
	this.DurationCountLimitSec = durationCountLimitSec
	this.DurationSec = durationSec
	this.Matcher = matcher
	this.PolicyId = policyId
	this.UpdatedAt = updatedAt
	return &this
}

// NewControlsNetworkPolicyWithDefaults instantiates a new ControlsNetworkPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControlsNetworkPolicyWithDefaults() *ControlsNetworkPolicy {
	this := ControlsNetworkPolicy{}
	return &this
}

// GetAction returns the Action field value
func (o *ControlsNetworkPolicy) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *ControlsNetworkPolicy) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *ControlsNetworkPolicy) SetAction(v string) {
	o.Action = v
}

// GetCountLimit returns the CountLimit field value
func (o *ControlsNetworkPolicy) GetCountLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CountLimit
}

// GetCountLimitOk returns a tuple with the CountLimit field value
// and a boolean to check if the value has been set.
func (o *ControlsNetworkPolicy) GetCountLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountLimit, true
}

// SetCountLimit sets field value
func (o *ControlsNetworkPolicy) SetCountLimit(v int32) {
	o.CountLimit = v
}

// GetDurationCountLimitSec returns the DurationCountLimitSec field value
func (o *ControlsNetworkPolicy) GetDurationCountLimitSec() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DurationCountLimitSec
}

// GetDurationCountLimitSecOk returns a tuple with the DurationCountLimitSec field value
// and a boolean to check if the value has been set.
func (o *ControlsNetworkPolicy) GetDurationCountLimitSecOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DurationCountLimitSec, true
}

// SetDurationCountLimitSec sets field value
func (o *ControlsNetworkPolicy) SetDurationCountLimitSec(v int32) {
	o.DurationCountLimitSec = v
}

// GetDurationSec returns the DurationSec field value
func (o *ControlsNetworkPolicy) GetDurationSec() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DurationSec
}

// GetDurationSecOk returns a tuple with the DurationSec field value
// and a boolean to check if the value has been set.
func (o *ControlsNetworkPolicy) GetDurationSecOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DurationSec, true
}

// SetDurationSec sets field value
func (o *ControlsNetworkPolicy) SetDurationSec(v int32) {
	o.DurationSec = v
}

// GetMatcher returns the Matcher field value
func (o *ControlsNetworkPolicy) GetMatcher() ControlsPolicyAlertMatcher {
	if o == nil {
		var ret ControlsPolicyAlertMatcher
		return ret
	}

	return o.Matcher
}

// GetMatcherOk returns a tuple with the Matcher field value
// and a boolean to check if the value has been set.
func (o *ControlsNetworkPolicy) GetMatcherOk() (*ControlsPolicyAlertMatcher, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Matcher, true
}

// SetMatcher sets field value
func (o *ControlsNetworkPolicy) SetMatcher(v ControlsPolicyAlertMatcher) {
	o.Matcher = v
}

// GetPolicyId returns the PolicyId field value
func (o *ControlsNetworkPolicy) GetPolicyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value
// and a boolean to check if the value has been set.
func (o *ControlsNetworkPolicy) GetPolicyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyId, true
}

// SetPolicyId sets field value
func (o *ControlsNetworkPolicy) SetPolicyId(v string) {
	o.PolicyId = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ControlsNetworkPolicy) GetUpdatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ControlsNetworkPolicy) GetUpdatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ControlsNetworkPolicy) SetUpdatedAt(v int64) {
	o.UpdatedAt = v
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *ControlsNetworkPolicy) GetUuid() string {
	if o == nil || IsNil(o.Uuid) {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ControlsNetworkPolicy) GetUuidOk() (*string, bool) {
	if o == nil || IsNil(o.Uuid) {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *ControlsNetworkPolicy) HasUuid() bool {
	if o != nil && !IsNil(o.Uuid) {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *ControlsNetworkPolicy) SetUuid(v string) {
	o.Uuid = &v
}

func (o ControlsNetworkPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControlsNetworkPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["action"] = o.Action
	toSerialize["count_limit"] = o.CountLimit
	toSerialize["duration_count_limit_sec"] = o.DurationCountLimitSec
	toSerialize["duration_sec"] = o.DurationSec
	toSerialize["matcher"] = o.Matcher
	toSerialize["policy_id"] = o.PolicyId
	toSerialize["updated_at"] = o.UpdatedAt
	if !IsNil(o.Uuid) {
		toSerialize["uuid"] = o.Uuid
	}
	return toSerialize, nil
}

func (o *ControlsNetworkPolicy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"action",
		"count_limit",
		"duration_count_limit_sec",
		"duration_sec",
		"matcher",
		"policy_id",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varControlsNetworkPolicy := _ControlsNetworkPolicy{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varControlsNetworkPolicy)

	if err != nil {
		return err
	}

	*o = ControlsNetworkPolicy(varControlsNetworkPolicy)

	return err
}

type NullableControlsNetworkPolicy struct {
	value *ControlsNetworkPolicy
	isSet bool
}

func (v NullableControlsNetworkPolicy) Get() *ControlsNetworkPolicy {
	return v.value
}

func (v *NullableControlsNetworkPolicy) Set(val *ControlsNetworkPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableControlsNetworkPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableControlsNetworkPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControlsNetworkPolicy(val *ControlsNetworkPolicy) *NullableControlsNetworkPolicy {
	return &NullableControlsNetworkPolicy{value: val, isSet: true}
}

func (v NullableControlsNetworkPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControlsNetworkPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


