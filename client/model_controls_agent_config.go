/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ControlsAgentConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ControlsAgentConfig{}

// ControlsAgentConfig struct for ControlsAgentConfig
type ControlsAgentConfig struct {
	FilesystemTracerConfig ControlsFilesystemTracerConfig `json:"filesystem_tracer_config"`
	Name string `json:"name"`
	NetworkTracerConfig ControlsNetworkTracerConfig `json:"network_tracer_config"`
	PolicyTracerConfig ControlsPolicyFilterConfig `json:"policy_tracer_config"`
}

// NewControlsAgentConfig instantiates a new ControlsAgentConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewControlsAgentConfig(filesystemTracerConfig ControlsFilesystemTracerConfig, name string, networkTracerConfig ControlsNetworkTracerConfig, policyTracerConfig ControlsPolicyFilterConfig) *ControlsAgentConfig {
	this := ControlsAgentConfig{}
	this.FilesystemTracerConfig = filesystemTracerConfig
	this.Name = name
	this.NetworkTracerConfig = networkTracerConfig
	this.PolicyTracerConfig = policyTracerConfig
	return &this
}

// NewControlsAgentConfigWithDefaults instantiates a new ControlsAgentConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewControlsAgentConfigWithDefaults() *ControlsAgentConfig {
	this := ControlsAgentConfig{}
	return &this
}

// GetFilesystemTracerConfig returns the FilesystemTracerConfig field value
func (o *ControlsAgentConfig) GetFilesystemTracerConfig() ControlsFilesystemTracerConfig {
	if o == nil {
		var ret ControlsFilesystemTracerConfig
		return ret
	}

	return o.FilesystemTracerConfig
}

// GetFilesystemTracerConfigOk returns a tuple with the FilesystemTracerConfig field value
// and a boolean to check if the value has been set.
func (o *ControlsAgentConfig) GetFilesystemTracerConfigOk() (*ControlsFilesystemTracerConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilesystemTracerConfig, true
}

// SetFilesystemTracerConfig sets field value
func (o *ControlsAgentConfig) SetFilesystemTracerConfig(v ControlsFilesystemTracerConfig) {
	o.FilesystemTracerConfig = v
}

// GetName returns the Name field value
func (o *ControlsAgentConfig) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ControlsAgentConfig) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ControlsAgentConfig) SetName(v string) {
	o.Name = v
}

// GetNetworkTracerConfig returns the NetworkTracerConfig field value
func (o *ControlsAgentConfig) GetNetworkTracerConfig() ControlsNetworkTracerConfig {
	if o == nil {
		var ret ControlsNetworkTracerConfig
		return ret
	}

	return o.NetworkTracerConfig
}

// GetNetworkTracerConfigOk returns a tuple with the NetworkTracerConfig field value
// and a boolean to check if the value has been set.
func (o *ControlsAgentConfig) GetNetworkTracerConfigOk() (*ControlsNetworkTracerConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkTracerConfig, true
}

// SetNetworkTracerConfig sets field value
func (o *ControlsAgentConfig) SetNetworkTracerConfig(v ControlsNetworkTracerConfig) {
	o.NetworkTracerConfig = v
}

// GetPolicyTracerConfig returns the PolicyTracerConfig field value
func (o *ControlsAgentConfig) GetPolicyTracerConfig() ControlsPolicyFilterConfig {
	if o == nil {
		var ret ControlsPolicyFilterConfig
		return ret
	}

	return o.PolicyTracerConfig
}

// GetPolicyTracerConfigOk returns a tuple with the PolicyTracerConfig field value
// and a boolean to check if the value has been set.
func (o *ControlsAgentConfig) GetPolicyTracerConfigOk() (*ControlsPolicyFilterConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyTracerConfig, true
}

// SetPolicyTracerConfig sets field value
func (o *ControlsAgentConfig) SetPolicyTracerConfig(v ControlsPolicyFilterConfig) {
	o.PolicyTracerConfig = v
}

func (o ControlsAgentConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ControlsAgentConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["filesystem_tracer_config"] = o.FilesystemTracerConfig
	toSerialize["name"] = o.Name
	toSerialize["network_tracer_config"] = o.NetworkTracerConfig
	toSerialize["policy_tracer_config"] = o.PolicyTracerConfig
	return toSerialize, nil
}

type NullableControlsAgentConfig struct {
	value *ControlsAgentConfig
	isSet bool
}

func (v NullableControlsAgentConfig) Get() *ControlsAgentConfig {
	return v.value
}

func (v *NullableControlsAgentConfig) Set(val *ControlsAgentConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableControlsAgentConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableControlsAgentConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableControlsAgentConfig(val *ControlsAgentConfig) *NullableControlsAgentConfig {
	return &NullableControlsAgentConfig{value: val, isSet: true}
}

func (v NullableControlsAgentConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableControlsAgentConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


