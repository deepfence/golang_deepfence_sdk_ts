/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelNetworkAlertGeoip type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelNetworkAlertGeoip{}

// ModelNetworkAlertGeoip struct for ModelNetworkAlertGeoip
type ModelNetworkAlertGeoip struct {
	Ip string `json:"ip"`
}

// NewModelNetworkAlertGeoip instantiates a new ModelNetworkAlertGeoip object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelNetworkAlertGeoip(ip string) *ModelNetworkAlertGeoip {
	this := ModelNetworkAlertGeoip{}
	this.Ip = ip
	return &this
}

// NewModelNetworkAlertGeoipWithDefaults instantiates a new ModelNetworkAlertGeoip object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelNetworkAlertGeoipWithDefaults() *ModelNetworkAlertGeoip {
	this := ModelNetworkAlertGeoip{}
	return &this
}

// GetIp returns the Ip field value
func (o *ModelNetworkAlertGeoip) GetIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ip
}

// GetIpOk returns a tuple with the Ip field value
// and a boolean to check if the value has been set.
func (o *ModelNetworkAlertGeoip) GetIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ip, true
}

// SetIp sets field value
func (o *ModelNetworkAlertGeoip) SetIp(v string) {
	o.Ip = v
}

func (o ModelNetworkAlertGeoip) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelNetworkAlertGeoip) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ip"] = o.Ip
	return toSerialize, nil
}

type NullableModelNetworkAlertGeoip struct {
	value *ModelNetworkAlertGeoip
	isSet bool
}

func (v NullableModelNetworkAlertGeoip) Get() *ModelNetworkAlertGeoip {
	return v.value
}

func (v *NullableModelNetworkAlertGeoip) Set(val *ModelNetworkAlertGeoip) {
	v.value = val
	v.isSet = true
}

func (v NullableModelNetworkAlertGeoip) IsSet() bool {
	return v.isSet
}

func (v *NullableModelNetworkAlertGeoip) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelNetworkAlertGeoip(val *ModelNetworkAlertGeoip) *NullableModelNetworkAlertGeoip {
	return &NullableModelNetworkAlertGeoip{value: val, isSet: true}
}

func (v NullableModelNetworkAlertGeoip) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelNetworkAlertGeoip) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


