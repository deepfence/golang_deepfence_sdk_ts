/*
Deepfence ThreatStryker

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: v2.5.2
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModelMaliciousConnectionAlert type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelMaliciousConnectionAlert{}

// ModelMaliciousConnectionAlert struct for ModelMaliciousConnectionAlert
type ModelMaliciousConnectionAlert struct {
	DestinationIp string `json:"destination_ip"`
	Direction string `json:"direction"`
	EventType string `json:"event_type"`
	HostName string `json:"host_name"`
	NodeId string `json:"node_id"`
	Severity string `json:"severity"`
	SourceIp string `json:"source_ip"`
	Summary string `json:"summary"`
	Tactics []string `json:"tactics"`
	Techniques []string `json:"techniques"`
	UpdatedAt int32 `json:"updated_at"`
}

type _ModelMaliciousConnectionAlert ModelMaliciousConnectionAlert

// NewModelMaliciousConnectionAlert instantiates a new ModelMaliciousConnectionAlert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelMaliciousConnectionAlert(destinationIp string, direction string, eventType string, hostName string, nodeId string, severity string, sourceIp string, summary string, tactics []string, techniques []string, updatedAt int32) *ModelMaliciousConnectionAlert {
	this := ModelMaliciousConnectionAlert{}
	this.DestinationIp = destinationIp
	this.Direction = direction
	this.EventType = eventType
	this.HostName = hostName
	this.NodeId = nodeId
	this.Severity = severity
	this.SourceIp = sourceIp
	this.Summary = summary
	this.Tactics = tactics
	this.Techniques = techniques
	this.UpdatedAt = updatedAt
	return &this
}

// NewModelMaliciousConnectionAlertWithDefaults instantiates a new ModelMaliciousConnectionAlert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelMaliciousConnectionAlertWithDefaults() *ModelMaliciousConnectionAlert {
	this := ModelMaliciousConnectionAlert{}
	return &this
}

// GetDestinationIp returns the DestinationIp field value
func (o *ModelMaliciousConnectionAlert) GetDestinationIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationIp
}

// GetDestinationIpOk returns a tuple with the DestinationIp field value
// and a boolean to check if the value has been set.
func (o *ModelMaliciousConnectionAlert) GetDestinationIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationIp, true
}

// SetDestinationIp sets field value
func (o *ModelMaliciousConnectionAlert) SetDestinationIp(v string) {
	o.DestinationIp = v
}

// GetDirection returns the Direction field value
func (o *ModelMaliciousConnectionAlert) GetDirection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *ModelMaliciousConnectionAlert) GetDirectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *ModelMaliciousConnectionAlert) SetDirection(v string) {
	o.Direction = v
}

// GetEventType returns the EventType field value
func (o *ModelMaliciousConnectionAlert) GetEventType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *ModelMaliciousConnectionAlert) GetEventTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *ModelMaliciousConnectionAlert) SetEventType(v string) {
	o.EventType = v
}

// GetHostName returns the HostName field value
func (o *ModelMaliciousConnectionAlert) GetHostName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value
// and a boolean to check if the value has been set.
func (o *ModelMaliciousConnectionAlert) GetHostNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostName, true
}

// SetHostName sets field value
func (o *ModelMaliciousConnectionAlert) SetHostName(v string) {
	o.HostName = v
}

// GetNodeId returns the NodeId field value
func (o *ModelMaliciousConnectionAlert) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *ModelMaliciousConnectionAlert) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *ModelMaliciousConnectionAlert) SetNodeId(v string) {
	o.NodeId = v
}

// GetSeverity returns the Severity field value
func (o *ModelMaliciousConnectionAlert) GetSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *ModelMaliciousConnectionAlert) GetSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *ModelMaliciousConnectionAlert) SetSeverity(v string) {
	o.Severity = v
}

// GetSourceIp returns the SourceIp field value
func (o *ModelMaliciousConnectionAlert) GetSourceIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceIp
}

// GetSourceIpOk returns a tuple with the SourceIp field value
// and a boolean to check if the value has been set.
func (o *ModelMaliciousConnectionAlert) GetSourceIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceIp, true
}

// SetSourceIp sets field value
func (o *ModelMaliciousConnectionAlert) SetSourceIp(v string) {
	o.SourceIp = v
}

// GetSummary returns the Summary field value
func (o *ModelMaliciousConnectionAlert) GetSummary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *ModelMaliciousConnectionAlert) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *ModelMaliciousConnectionAlert) SetSummary(v string) {
	o.Summary = v
}

// GetTactics returns the Tactics field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ModelMaliciousConnectionAlert) GetTactics() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tactics
}

// GetTacticsOk returns a tuple with the Tactics field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelMaliciousConnectionAlert) GetTacticsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tactics) {
		return nil, false
	}
	return o.Tactics, true
}

// SetTactics sets field value
func (o *ModelMaliciousConnectionAlert) SetTactics(v []string) {
	o.Tactics = v
}

// GetTechniques returns the Techniques field value
// If the value is explicit nil, the zero value for []string will be returned
func (o *ModelMaliciousConnectionAlert) GetTechniques() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Techniques
}

// GetTechniquesOk returns a tuple with the Techniques field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelMaliciousConnectionAlert) GetTechniquesOk() ([]string, bool) {
	if o == nil || IsNil(o.Techniques) {
		return nil, false
	}
	return o.Techniques, true
}

// SetTechniques sets field value
func (o *ModelMaliciousConnectionAlert) SetTechniques(v []string) {
	o.Techniques = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ModelMaliciousConnectionAlert) GetUpdatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ModelMaliciousConnectionAlert) GetUpdatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ModelMaliciousConnectionAlert) SetUpdatedAt(v int32) {
	o.UpdatedAt = v
}

func (o ModelMaliciousConnectionAlert) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelMaliciousConnectionAlert) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["destination_ip"] = o.DestinationIp
	toSerialize["direction"] = o.Direction
	toSerialize["event_type"] = o.EventType
	toSerialize["host_name"] = o.HostName
	toSerialize["node_id"] = o.NodeId
	toSerialize["severity"] = o.Severity
	toSerialize["source_ip"] = o.SourceIp
	toSerialize["summary"] = o.Summary
	if o.Tactics != nil {
		toSerialize["tactics"] = o.Tactics
	}
	if o.Techniques != nil {
		toSerialize["techniques"] = o.Techniques
	}
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *ModelMaliciousConnectionAlert) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"destination_ip",
		"direction",
		"event_type",
		"host_name",
		"node_id",
		"severity",
		"source_ip",
		"summary",
		"tactics",
		"techniques",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelMaliciousConnectionAlert := _ModelMaliciousConnectionAlert{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModelMaliciousConnectionAlert)

	if err != nil {
		return err
	}

	*o = ModelMaliciousConnectionAlert(varModelMaliciousConnectionAlert)

	return err
}

type NullableModelMaliciousConnectionAlert struct {
	value *ModelMaliciousConnectionAlert
	isSet bool
}

func (v NullableModelMaliciousConnectionAlert) Get() *ModelMaliciousConnectionAlert {
	return v.value
}

func (v *NullableModelMaliciousConnectionAlert) Set(val *ModelMaliciousConnectionAlert) {
	v.value = val
	v.isSet = true
}

func (v NullableModelMaliciousConnectionAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableModelMaliciousConnectionAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelMaliciousConnectionAlert(val *ModelMaliciousConnectionAlert) *NullableModelMaliciousConnectionAlert {
	return &NullableModelMaliciousConnectionAlert{value: val, isSet: true}
}

func (v NullableModelMaliciousConnectionAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelMaliciousConnectionAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


