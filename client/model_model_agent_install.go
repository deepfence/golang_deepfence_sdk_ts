/*
Deepfence ThreatStryker

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: v2.5.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModelAgentInstall type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelAgentInstall{}

// ModelAgentInstall struct for ModelAgentInstall
type ModelAgentInstall struct {
	CloudProvider string `json:"cloud_provider"`
	CloudScannerId ModelAgentID `json:"cloud_scanner_id"`
	RegionIds []ModelRegionIDs `json:"region_ids"`
}

type _ModelAgentInstall ModelAgentInstall

// NewModelAgentInstall instantiates a new ModelAgentInstall object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelAgentInstall(cloudProvider string, cloudScannerId ModelAgentID, regionIds []ModelRegionIDs) *ModelAgentInstall {
	this := ModelAgentInstall{}
	this.CloudProvider = cloudProvider
	this.CloudScannerId = cloudScannerId
	this.RegionIds = regionIds
	return &this
}

// NewModelAgentInstallWithDefaults instantiates a new ModelAgentInstall object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelAgentInstallWithDefaults() *ModelAgentInstall {
	this := ModelAgentInstall{}
	return &this
}

// GetCloudProvider returns the CloudProvider field value
func (o *ModelAgentInstall) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *ModelAgentInstall) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *ModelAgentInstall) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetCloudScannerId returns the CloudScannerId field value
func (o *ModelAgentInstall) GetCloudScannerId() ModelAgentID {
	if o == nil {
		var ret ModelAgentID
		return ret
	}

	return o.CloudScannerId
}

// GetCloudScannerIdOk returns a tuple with the CloudScannerId field value
// and a boolean to check if the value has been set.
func (o *ModelAgentInstall) GetCloudScannerIdOk() (*ModelAgentID, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudScannerId, true
}

// SetCloudScannerId sets field value
func (o *ModelAgentInstall) SetCloudScannerId(v ModelAgentID) {
	o.CloudScannerId = v
}

// GetRegionIds returns the RegionIds field value
// If the value is explicit nil, the zero value for []ModelRegionIDs will be returned
func (o *ModelAgentInstall) GetRegionIds() []ModelRegionIDs {
	if o == nil {
		var ret []ModelRegionIDs
		return ret
	}

	return o.RegionIds
}

// GetRegionIdsOk returns a tuple with the RegionIds field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelAgentInstall) GetRegionIdsOk() ([]ModelRegionIDs, bool) {
	if o == nil || IsNil(o.RegionIds) {
		return nil, false
	}
	return o.RegionIds, true
}

// SetRegionIds sets field value
func (o *ModelAgentInstall) SetRegionIds(v []ModelRegionIDs) {
	o.RegionIds = v
}

func (o ModelAgentInstall) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelAgentInstall) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloud_provider"] = o.CloudProvider
	toSerialize["cloud_scanner_id"] = o.CloudScannerId
	if o.RegionIds != nil {
		toSerialize["region_ids"] = o.RegionIds
	}
	return toSerialize, nil
}

func (o *ModelAgentInstall) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cloud_provider",
		"cloud_scanner_id",
		"region_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelAgentInstall := _ModelAgentInstall{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModelAgentInstall)

	if err != nil {
		return err
	}

	*o = ModelAgentInstall(varModelAgentInstall)

	return err
}

type NullableModelAgentInstall struct {
	value *ModelAgentInstall
	isSet bool
}

func (v NullableModelAgentInstall) Get() *ModelAgentInstall {
	return v.value
}

func (v *NullableModelAgentInstall) Set(val *ModelAgentInstall) {
	v.value = val
	v.isSet = true
}

func (v NullableModelAgentInstall) IsSet() bool {
	return v.isSet
}

func (v *NullableModelAgentInstall) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelAgentInstall(val *ModelAgentInstall) *NullableModelAgentInstall {
	return &NullableModelAgentInstall{value: val, isSet: true}
}

func (v NullableModelAgentInstall) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelAgentInstall) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


