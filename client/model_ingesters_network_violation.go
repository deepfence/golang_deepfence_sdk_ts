/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the IngestersNetworkViolation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngestersNetworkViolation{}

// IngestersNetworkViolation struct for IngestersNetworkViolation
type IngestersNetworkViolation struct {
	Action *string `json:"action,omitempty"`
	ContainerId *string `json:"container_id,omitempty"`
	Direction *string `json:"direction,omitempty"`
	ExecutedAt *string `json:"executed_at,omitempty"`
	HostName *string `json:"host_name,omitempty"`
	PodId *string `json:"pod_id,omitempty"`
	PolicyId *string `json:"policy_id,omitempty"`
	RemoteIp *string `json:"remote_ip,omitempty"`
	RemotePort *int32 `json:"remote_port,omitempty"`
	SourceIp *string `json:"source_ip,omitempty"`
	SourcePort *int32 `json:"source_port,omitempty"`
}

// NewIngestersNetworkViolation instantiates a new IngestersNetworkViolation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngestersNetworkViolation() *IngestersNetworkViolation {
	this := IngestersNetworkViolation{}
	return &this
}

// NewIngestersNetworkViolationWithDefaults instantiates a new IngestersNetworkViolation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngestersNetworkViolationWithDefaults() *IngestersNetworkViolation {
	this := IngestersNetworkViolation{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *IngestersNetworkViolation) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersNetworkViolation) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *IngestersNetworkViolation) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *IngestersNetworkViolation) SetAction(v string) {
	o.Action = &v
}

// GetContainerId returns the ContainerId field value if set, zero value otherwise.
func (o *IngestersNetworkViolation) GetContainerId() string {
	if o == nil || IsNil(o.ContainerId) {
		var ret string
		return ret
	}
	return *o.ContainerId
}

// GetContainerIdOk returns a tuple with the ContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersNetworkViolation) GetContainerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContainerId) {
		return nil, false
	}
	return o.ContainerId, true
}

// HasContainerId returns a boolean if a field has been set.
func (o *IngestersNetworkViolation) HasContainerId() bool {
	if o != nil && !IsNil(o.ContainerId) {
		return true
	}

	return false
}

// SetContainerId gets a reference to the given string and assigns it to the ContainerId field.
func (o *IngestersNetworkViolation) SetContainerId(v string) {
	o.ContainerId = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *IngestersNetworkViolation) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersNetworkViolation) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *IngestersNetworkViolation) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *IngestersNetworkViolation) SetDirection(v string) {
	o.Direction = &v
}

// GetExecutedAt returns the ExecutedAt field value if set, zero value otherwise.
func (o *IngestersNetworkViolation) GetExecutedAt() string {
	if o == nil || IsNil(o.ExecutedAt) {
		var ret string
		return ret
	}
	return *o.ExecutedAt
}

// GetExecutedAtOk returns a tuple with the ExecutedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersNetworkViolation) GetExecutedAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutedAt) {
		return nil, false
	}
	return o.ExecutedAt, true
}

// HasExecutedAt returns a boolean if a field has been set.
func (o *IngestersNetworkViolation) HasExecutedAt() bool {
	if o != nil && !IsNil(o.ExecutedAt) {
		return true
	}

	return false
}

// SetExecutedAt gets a reference to the given string and assigns it to the ExecutedAt field.
func (o *IngestersNetworkViolation) SetExecutedAt(v string) {
	o.ExecutedAt = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *IngestersNetworkViolation) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersNetworkViolation) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *IngestersNetworkViolation) HasHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *IngestersNetworkViolation) SetHostName(v string) {
	o.HostName = &v
}

// GetPodId returns the PodId field value if set, zero value otherwise.
func (o *IngestersNetworkViolation) GetPodId() string {
	if o == nil || IsNil(o.PodId) {
		var ret string
		return ret
	}
	return *o.PodId
}

// GetPodIdOk returns a tuple with the PodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersNetworkViolation) GetPodIdOk() (*string, bool) {
	if o == nil || IsNil(o.PodId) {
		return nil, false
	}
	return o.PodId, true
}

// HasPodId returns a boolean if a field has been set.
func (o *IngestersNetworkViolation) HasPodId() bool {
	if o != nil && !IsNil(o.PodId) {
		return true
	}

	return false
}

// SetPodId gets a reference to the given string and assigns it to the PodId field.
func (o *IngestersNetworkViolation) SetPodId(v string) {
	o.PodId = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *IngestersNetworkViolation) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId) {
		var ret string
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersNetworkViolation) GetPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *IngestersNetworkViolation) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given string and assigns it to the PolicyId field.
func (o *IngestersNetworkViolation) SetPolicyId(v string) {
	o.PolicyId = &v
}

// GetRemoteIp returns the RemoteIp field value if set, zero value otherwise.
func (o *IngestersNetworkViolation) GetRemoteIp() string {
	if o == nil || IsNil(o.RemoteIp) {
		var ret string
		return ret
	}
	return *o.RemoteIp
}

// GetRemoteIpOk returns a tuple with the RemoteIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersNetworkViolation) GetRemoteIpOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteIp) {
		return nil, false
	}
	return o.RemoteIp, true
}

// HasRemoteIp returns a boolean if a field has been set.
func (o *IngestersNetworkViolation) HasRemoteIp() bool {
	if o != nil && !IsNil(o.RemoteIp) {
		return true
	}

	return false
}

// SetRemoteIp gets a reference to the given string and assigns it to the RemoteIp field.
func (o *IngestersNetworkViolation) SetRemoteIp(v string) {
	o.RemoteIp = &v
}

// GetRemotePort returns the RemotePort field value if set, zero value otherwise.
func (o *IngestersNetworkViolation) GetRemotePort() int32 {
	if o == nil || IsNil(o.RemotePort) {
		var ret int32
		return ret
	}
	return *o.RemotePort
}

// GetRemotePortOk returns a tuple with the RemotePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersNetworkViolation) GetRemotePortOk() (*int32, bool) {
	if o == nil || IsNil(o.RemotePort) {
		return nil, false
	}
	return o.RemotePort, true
}

// HasRemotePort returns a boolean if a field has been set.
func (o *IngestersNetworkViolation) HasRemotePort() bool {
	if o != nil && !IsNil(o.RemotePort) {
		return true
	}

	return false
}

// SetRemotePort gets a reference to the given int32 and assigns it to the RemotePort field.
func (o *IngestersNetworkViolation) SetRemotePort(v int32) {
	o.RemotePort = &v
}

// GetSourceIp returns the SourceIp field value if set, zero value otherwise.
func (o *IngestersNetworkViolation) GetSourceIp() string {
	if o == nil || IsNil(o.SourceIp) {
		var ret string
		return ret
	}
	return *o.SourceIp
}

// GetSourceIpOk returns a tuple with the SourceIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersNetworkViolation) GetSourceIpOk() (*string, bool) {
	if o == nil || IsNil(o.SourceIp) {
		return nil, false
	}
	return o.SourceIp, true
}

// HasSourceIp returns a boolean if a field has been set.
func (o *IngestersNetworkViolation) HasSourceIp() bool {
	if o != nil && !IsNil(o.SourceIp) {
		return true
	}

	return false
}

// SetSourceIp gets a reference to the given string and assigns it to the SourceIp field.
func (o *IngestersNetworkViolation) SetSourceIp(v string) {
	o.SourceIp = &v
}

// GetSourcePort returns the SourcePort field value if set, zero value otherwise.
func (o *IngestersNetworkViolation) GetSourcePort() int32 {
	if o == nil || IsNil(o.SourcePort) {
		var ret int32
		return ret
	}
	return *o.SourcePort
}

// GetSourcePortOk returns a tuple with the SourcePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersNetworkViolation) GetSourcePortOk() (*int32, bool) {
	if o == nil || IsNil(o.SourcePort) {
		return nil, false
	}
	return o.SourcePort, true
}

// HasSourcePort returns a boolean if a field has been set.
func (o *IngestersNetworkViolation) HasSourcePort() bool {
	if o != nil && !IsNil(o.SourcePort) {
		return true
	}

	return false
}

// SetSourcePort gets a reference to the given int32 and assigns it to the SourcePort field.
func (o *IngestersNetworkViolation) SetSourcePort(v int32) {
	o.SourcePort = &v
}

func (o IngestersNetworkViolation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngestersNetworkViolation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.ContainerId) {
		toSerialize["container_id"] = o.ContainerId
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.ExecutedAt) {
		toSerialize["executed_at"] = o.ExecutedAt
	}
	if !IsNil(o.HostName) {
		toSerialize["host_name"] = o.HostName
	}
	if !IsNil(o.PodId) {
		toSerialize["pod_id"] = o.PodId
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policy_id"] = o.PolicyId
	}
	if !IsNil(o.RemoteIp) {
		toSerialize["remote_ip"] = o.RemoteIp
	}
	if !IsNil(o.RemotePort) {
		toSerialize["remote_port"] = o.RemotePort
	}
	if !IsNil(o.SourceIp) {
		toSerialize["source_ip"] = o.SourceIp
	}
	if !IsNil(o.SourcePort) {
		toSerialize["source_port"] = o.SourcePort
	}
	return toSerialize, nil
}

type NullableIngestersNetworkViolation struct {
	value *IngestersNetworkViolation
	isSet bool
}

func (v NullableIngestersNetworkViolation) Get() *IngestersNetworkViolation {
	return v.value
}

func (v *NullableIngestersNetworkViolation) Set(val *IngestersNetworkViolation) {
	v.value = val
	v.isSet = true
}

func (v NullableIngestersNetworkViolation) IsSet() bool {
	return v.isSet
}

func (v *NullableIngestersNetworkViolation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngestersNetworkViolation(val *IngestersNetworkViolation) *NullableIngestersNetworkViolation {
	return &NullableIngestersNetworkViolation{value: val, isSet: true}
}

func (v NullableIngestersNetworkViolation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngestersNetworkViolation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


