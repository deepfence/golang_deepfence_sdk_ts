/*
Deepfence ThreatStryker

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: v2.5.2
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the ModelNetworkViolation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelNetworkViolation{}

// ModelNetworkViolation struct for ModelNetworkViolation
type ModelNetworkViolation struct {
	Action *string `json:"action,omitempty"`
	AlertId *string `json:"alert_id,omitempty"`
	AppliedBy *string `json:"applied_by,omitempty"`
	BlockIp *string `json:"block_ip,omitempty"`
	ConfigId *string `json:"config_id,omitempty"`
	ContainerId *string `json:"container_id,omitempty"`
	CreatedAt *int32 `json:"created_at,omitempty"`
	Defenderd *string `json:"defenderd,omitempty"`
	Direction *string `json:"direction,omitempty"`
	EventType *string `json:"event_type,omitempty"`
	ExecutedAt *int32 `json:"executed_at,omitempty"`
	HostName *string `json:"host_name,omitempty"`
	LocalIp *string `json:"local_ip,omitempty"`
	LocalPort *int32 `json:"local_port,omitempty"`
	NodeId *string `json:"node_id,omitempty"`
	NodePolicyType *string `json:"node_policy_type,omitempty"`
	PacketDirection *string `json:"packet_direction,omitempty"`
	PodId *string `json:"pod_id,omitempty"`
	PolicyIndex *int32 `json:"policy_index,omitempty"`
	RemoteIp *string `json:"remote_ip,omitempty"`
	RemotePort *int32 `json:"remote_port,omitempty"`
	Severity *string `json:"severity,omitempty"`
	Status *string `json:"status,omitempty"`
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewModelNetworkViolation instantiates a new ModelNetworkViolation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelNetworkViolation() *ModelNetworkViolation {
	this := ModelNetworkViolation{}
	return &this
}

// NewModelNetworkViolationWithDefaults instantiates a new ModelNetworkViolation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelNetworkViolationWithDefaults() *ModelNetworkViolation {
	this := ModelNetworkViolation{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ModelNetworkViolation) SetAction(v string) {
	o.Action = &v
}

// GetAlertId returns the AlertId field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetAlertId() string {
	if o == nil || IsNil(o.AlertId) {
		var ret string
		return ret
	}
	return *o.AlertId
}

// GetAlertIdOk returns a tuple with the AlertId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetAlertIdOk() (*string, bool) {
	if o == nil || IsNil(o.AlertId) {
		return nil, false
	}
	return o.AlertId, true
}

// HasAlertId returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasAlertId() bool {
	if o != nil && !IsNil(o.AlertId) {
		return true
	}

	return false
}

// SetAlertId gets a reference to the given string and assigns it to the AlertId field.
func (o *ModelNetworkViolation) SetAlertId(v string) {
	o.AlertId = &v
}

// GetAppliedBy returns the AppliedBy field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetAppliedBy() string {
	if o == nil || IsNil(o.AppliedBy) {
		var ret string
		return ret
	}
	return *o.AppliedBy
}

// GetAppliedByOk returns a tuple with the AppliedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetAppliedByOk() (*string, bool) {
	if o == nil || IsNil(o.AppliedBy) {
		return nil, false
	}
	return o.AppliedBy, true
}

// HasAppliedBy returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasAppliedBy() bool {
	if o != nil && !IsNil(o.AppliedBy) {
		return true
	}

	return false
}

// SetAppliedBy gets a reference to the given string and assigns it to the AppliedBy field.
func (o *ModelNetworkViolation) SetAppliedBy(v string) {
	o.AppliedBy = &v
}

// GetBlockIp returns the BlockIp field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetBlockIp() string {
	if o == nil || IsNil(o.BlockIp) {
		var ret string
		return ret
	}
	return *o.BlockIp
}

// GetBlockIpOk returns a tuple with the BlockIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetBlockIpOk() (*string, bool) {
	if o == nil || IsNil(o.BlockIp) {
		return nil, false
	}
	return o.BlockIp, true
}

// HasBlockIp returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasBlockIp() bool {
	if o != nil && !IsNil(o.BlockIp) {
		return true
	}

	return false
}

// SetBlockIp gets a reference to the given string and assigns it to the BlockIp field.
func (o *ModelNetworkViolation) SetBlockIp(v string) {
	o.BlockIp = &v
}

// GetConfigId returns the ConfigId field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetConfigId() string {
	if o == nil || IsNil(o.ConfigId) {
		var ret string
		return ret
	}
	return *o.ConfigId
}

// GetConfigIdOk returns a tuple with the ConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetConfigIdOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigId) {
		return nil, false
	}
	return o.ConfigId, true
}

// HasConfigId returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasConfigId() bool {
	if o != nil && !IsNil(o.ConfigId) {
		return true
	}

	return false
}

// SetConfigId gets a reference to the given string and assigns it to the ConfigId field.
func (o *ModelNetworkViolation) SetConfigId(v string) {
	o.ConfigId = &v
}

// GetContainerId returns the ContainerId field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetContainerId() string {
	if o == nil || IsNil(o.ContainerId) {
		var ret string
		return ret
	}
	return *o.ContainerId
}

// GetContainerIdOk returns a tuple with the ContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetContainerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ContainerId) {
		return nil, false
	}
	return o.ContainerId, true
}

// HasContainerId returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasContainerId() bool {
	if o != nil && !IsNil(o.ContainerId) {
		return true
	}

	return false
}

// SetContainerId gets a reference to the given string and assigns it to the ContainerId field.
func (o *ModelNetworkViolation) SetContainerId(v string) {
	o.ContainerId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetCreatedAt() int32 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetCreatedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *ModelNetworkViolation) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDefenderd returns the Defenderd field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetDefenderd() string {
	if o == nil || IsNil(o.Defenderd) {
		var ret string
		return ret
	}
	return *o.Defenderd
}

// GetDefenderdOk returns a tuple with the Defenderd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetDefenderdOk() (*string, bool) {
	if o == nil || IsNil(o.Defenderd) {
		return nil, false
	}
	return o.Defenderd, true
}

// HasDefenderd returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasDefenderd() bool {
	if o != nil && !IsNil(o.Defenderd) {
		return true
	}

	return false
}

// SetDefenderd gets a reference to the given string and assigns it to the Defenderd field.
func (o *ModelNetworkViolation) SetDefenderd(v string) {
	o.Defenderd = &v
}

// GetDirection returns the Direction field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetDirection() string {
	if o == nil || IsNil(o.Direction) {
		var ret string
		return ret
	}
	return *o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.Direction) {
		return nil, false
	}
	return o.Direction, true
}

// HasDirection returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasDirection() bool {
	if o != nil && !IsNil(o.Direction) {
		return true
	}

	return false
}

// SetDirection gets a reference to the given string and assigns it to the Direction field.
func (o *ModelNetworkViolation) SetDirection(v string) {
	o.Direction = &v
}

// GetEventType returns the EventType field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetEventType() string {
	if o == nil || IsNil(o.EventType) {
		var ret string
		return ret
	}
	return *o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetEventTypeOk() (*string, bool) {
	if o == nil || IsNil(o.EventType) {
		return nil, false
	}
	return o.EventType, true
}

// HasEventType returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasEventType() bool {
	if o != nil && !IsNil(o.EventType) {
		return true
	}

	return false
}

// SetEventType gets a reference to the given string and assigns it to the EventType field.
func (o *ModelNetworkViolation) SetEventType(v string) {
	o.EventType = &v
}

// GetExecutedAt returns the ExecutedAt field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetExecutedAt() int32 {
	if o == nil || IsNil(o.ExecutedAt) {
		var ret int32
		return ret
	}
	return *o.ExecutedAt
}

// GetExecutedAtOk returns a tuple with the ExecutedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetExecutedAtOk() (*int32, bool) {
	if o == nil || IsNil(o.ExecutedAt) {
		return nil, false
	}
	return o.ExecutedAt, true
}

// HasExecutedAt returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasExecutedAt() bool {
	if o != nil && !IsNil(o.ExecutedAt) {
		return true
	}

	return false
}

// SetExecutedAt gets a reference to the given int32 and assigns it to the ExecutedAt field.
func (o *ModelNetworkViolation) SetExecutedAt(v int32) {
	o.ExecutedAt = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetHostName() string {
	if o == nil || IsNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasHostName() bool {
	if o != nil && !IsNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *ModelNetworkViolation) SetHostName(v string) {
	o.HostName = &v
}

// GetLocalIp returns the LocalIp field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetLocalIp() string {
	if o == nil || IsNil(o.LocalIp) {
		var ret string
		return ret
	}
	return *o.LocalIp
}

// GetLocalIpOk returns a tuple with the LocalIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetLocalIpOk() (*string, bool) {
	if o == nil || IsNil(o.LocalIp) {
		return nil, false
	}
	return o.LocalIp, true
}

// HasLocalIp returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasLocalIp() bool {
	if o != nil && !IsNil(o.LocalIp) {
		return true
	}

	return false
}

// SetLocalIp gets a reference to the given string and assigns it to the LocalIp field.
func (o *ModelNetworkViolation) SetLocalIp(v string) {
	o.LocalIp = &v
}

// GetLocalPort returns the LocalPort field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetLocalPort() int32 {
	if o == nil || IsNil(o.LocalPort) {
		var ret int32
		return ret
	}
	return *o.LocalPort
}

// GetLocalPortOk returns a tuple with the LocalPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetLocalPortOk() (*int32, bool) {
	if o == nil || IsNil(o.LocalPort) {
		return nil, false
	}
	return o.LocalPort, true
}

// HasLocalPort returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasLocalPort() bool {
	if o != nil && !IsNil(o.LocalPort) {
		return true
	}

	return false
}

// SetLocalPort gets a reference to the given int32 and assigns it to the LocalPort field.
func (o *ModelNetworkViolation) SetLocalPort(v int32) {
	o.LocalPort = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *ModelNetworkViolation) SetNodeId(v string) {
	o.NodeId = &v
}

// GetNodePolicyType returns the NodePolicyType field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetNodePolicyType() string {
	if o == nil || IsNil(o.NodePolicyType) {
		var ret string
		return ret
	}
	return *o.NodePolicyType
}

// GetNodePolicyTypeOk returns a tuple with the NodePolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetNodePolicyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NodePolicyType) {
		return nil, false
	}
	return o.NodePolicyType, true
}

// HasNodePolicyType returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasNodePolicyType() bool {
	if o != nil && !IsNil(o.NodePolicyType) {
		return true
	}

	return false
}

// SetNodePolicyType gets a reference to the given string and assigns it to the NodePolicyType field.
func (o *ModelNetworkViolation) SetNodePolicyType(v string) {
	o.NodePolicyType = &v
}

// GetPacketDirection returns the PacketDirection field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetPacketDirection() string {
	if o == nil || IsNil(o.PacketDirection) {
		var ret string
		return ret
	}
	return *o.PacketDirection
}

// GetPacketDirectionOk returns a tuple with the PacketDirection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetPacketDirectionOk() (*string, bool) {
	if o == nil || IsNil(o.PacketDirection) {
		return nil, false
	}
	return o.PacketDirection, true
}

// HasPacketDirection returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasPacketDirection() bool {
	if o != nil && !IsNil(o.PacketDirection) {
		return true
	}

	return false
}

// SetPacketDirection gets a reference to the given string and assigns it to the PacketDirection field.
func (o *ModelNetworkViolation) SetPacketDirection(v string) {
	o.PacketDirection = &v
}

// GetPodId returns the PodId field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetPodId() string {
	if o == nil || IsNil(o.PodId) {
		var ret string
		return ret
	}
	return *o.PodId
}

// GetPodIdOk returns a tuple with the PodId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetPodIdOk() (*string, bool) {
	if o == nil || IsNil(o.PodId) {
		return nil, false
	}
	return o.PodId, true
}

// HasPodId returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasPodId() bool {
	if o != nil && !IsNil(o.PodId) {
		return true
	}

	return false
}

// SetPodId gets a reference to the given string and assigns it to the PodId field.
func (o *ModelNetworkViolation) SetPodId(v string) {
	o.PodId = &v
}

// GetPolicyIndex returns the PolicyIndex field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetPolicyIndex() int32 {
	if o == nil || IsNil(o.PolicyIndex) {
		var ret int32
		return ret
	}
	return *o.PolicyIndex
}

// GetPolicyIndexOk returns a tuple with the PolicyIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetPolicyIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.PolicyIndex) {
		return nil, false
	}
	return o.PolicyIndex, true
}

// HasPolicyIndex returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasPolicyIndex() bool {
	if o != nil && !IsNil(o.PolicyIndex) {
		return true
	}

	return false
}

// SetPolicyIndex gets a reference to the given int32 and assigns it to the PolicyIndex field.
func (o *ModelNetworkViolation) SetPolicyIndex(v int32) {
	o.PolicyIndex = &v
}

// GetRemoteIp returns the RemoteIp field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetRemoteIp() string {
	if o == nil || IsNil(o.RemoteIp) {
		var ret string
		return ret
	}
	return *o.RemoteIp
}

// GetRemoteIpOk returns a tuple with the RemoteIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetRemoteIpOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteIp) {
		return nil, false
	}
	return o.RemoteIp, true
}

// HasRemoteIp returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasRemoteIp() bool {
	if o != nil && !IsNil(o.RemoteIp) {
		return true
	}

	return false
}

// SetRemoteIp gets a reference to the given string and assigns it to the RemoteIp field.
func (o *ModelNetworkViolation) SetRemoteIp(v string) {
	o.RemoteIp = &v
}

// GetRemotePort returns the RemotePort field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetRemotePort() int32 {
	if o == nil || IsNil(o.RemotePort) {
		var ret int32
		return ret
	}
	return *o.RemotePort
}

// GetRemotePortOk returns a tuple with the RemotePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetRemotePortOk() (*int32, bool) {
	if o == nil || IsNil(o.RemotePort) {
		return nil, false
	}
	return o.RemotePort, true
}

// HasRemotePort returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasRemotePort() bool {
	if o != nil && !IsNil(o.RemotePort) {
		return true
	}

	return false
}

// SetRemotePort gets a reference to the given int32 and assigns it to the RemotePort field.
func (o *ModelNetworkViolation) SetRemotePort(v int32) {
	o.RemotePort = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *ModelNetworkViolation) SetSeverity(v string) {
	o.Severity = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ModelNetworkViolation) SetStatus(v string) {
	o.Status = &v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *ModelNetworkViolation) GetTtl() int32 {
	if o == nil || IsNil(o.Ttl) {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelNetworkViolation) GetTtlOk() (*int32, bool) {
	if o == nil || IsNil(o.Ttl) {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *ModelNetworkViolation) HasTtl() bool {
	if o != nil && !IsNil(o.Ttl) {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *ModelNetworkViolation) SetTtl(v int32) {
	o.Ttl = &v
}

func (o ModelNetworkViolation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelNetworkViolation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.AlertId) {
		toSerialize["alert_id"] = o.AlertId
	}
	if !IsNil(o.AppliedBy) {
		toSerialize["applied_by"] = o.AppliedBy
	}
	if !IsNil(o.BlockIp) {
		toSerialize["block_ip"] = o.BlockIp
	}
	if !IsNil(o.ConfigId) {
		toSerialize["config_id"] = o.ConfigId
	}
	if !IsNil(o.ContainerId) {
		toSerialize["container_id"] = o.ContainerId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Defenderd) {
		toSerialize["defenderd"] = o.Defenderd
	}
	if !IsNil(o.Direction) {
		toSerialize["direction"] = o.Direction
	}
	if !IsNil(o.EventType) {
		toSerialize["event_type"] = o.EventType
	}
	if !IsNil(o.ExecutedAt) {
		toSerialize["executed_at"] = o.ExecutedAt
	}
	if !IsNil(o.HostName) {
		toSerialize["host_name"] = o.HostName
	}
	if !IsNil(o.LocalIp) {
		toSerialize["local_ip"] = o.LocalIp
	}
	if !IsNil(o.LocalPort) {
		toSerialize["local_port"] = o.LocalPort
	}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.NodePolicyType) {
		toSerialize["node_policy_type"] = o.NodePolicyType
	}
	if !IsNil(o.PacketDirection) {
		toSerialize["packet_direction"] = o.PacketDirection
	}
	if !IsNil(o.PodId) {
		toSerialize["pod_id"] = o.PodId
	}
	if !IsNil(o.PolicyIndex) {
		toSerialize["policy_index"] = o.PolicyIndex
	}
	if !IsNil(o.RemoteIp) {
		toSerialize["remote_ip"] = o.RemoteIp
	}
	if !IsNil(o.RemotePort) {
		toSerialize["remote_port"] = o.RemotePort
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Ttl) {
		toSerialize["ttl"] = o.Ttl
	}
	return toSerialize, nil
}

type NullableModelNetworkViolation struct {
	value *ModelNetworkViolation
	isSet bool
}

func (v NullableModelNetworkViolation) Get() *ModelNetworkViolation {
	return v.value
}

func (v *NullableModelNetworkViolation) Set(val *ModelNetworkViolation) {
	v.value = val
	v.isSet = true
}

func (v NullableModelNetworkViolation) IsSet() bool {
	return v.isSet
}

func (v *NullableModelNetworkViolation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelNetworkViolation(val *ModelNetworkViolation) *NullableModelNetworkViolation {
	return &NullableModelNetworkViolation{value: val, isSet: true}
}

func (v NullableModelNetworkViolation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelNetworkViolation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


