/*
Deepfence ThreatStryker

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.2.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the IngestersPolicyLog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngestersPolicyLog{}

// IngestersPolicyLog struct for IngestersPolicyLog
type IngestersPolicyLog struct {
	AlertId string `json:"alert_id"`
	ConfigId string `json:"config_id"`
	CreatedAt int32 `json:"created_at"`
	Direction string `json:"direction"`
	HostName string `json:"host_name"`
	Incident string `json:"incident"`
	LocalIp string `json:"local_ip"`
	LocalPort int32 `json:"local_port"`
	PolicyIndex int32 `json:"policy_index"`
	RemoteIp string `json:"remote_ip"`
	RemotePort int32 `json:"remote_port"`
	Severity string `json:"severity"`
}

type _IngestersPolicyLog IngestersPolicyLog

// NewIngestersPolicyLog instantiates a new IngestersPolicyLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngestersPolicyLog(alertId string, configId string, createdAt int32, direction string, hostName string, incident string, localIp string, localPort int32, policyIndex int32, remoteIp string, remotePort int32, severity string) *IngestersPolicyLog {
	this := IngestersPolicyLog{}
	this.AlertId = alertId
	this.ConfigId = configId
	this.CreatedAt = createdAt
	this.Direction = direction
	this.HostName = hostName
	this.Incident = incident
	this.LocalIp = localIp
	this.LocalPort = localPort
	this.PolicyIndex = policyIndex
	this.RemoteIp = remoteIp
	this.RemotePort = remotePort
	this.Severity = severity
	return &this
}

// NewIngestersPolicyLogWithDefaults instantiates a new IngestersPolicyLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngestersPolicyLogWithDefaults() *IngestersPolicyLog {
	this := IngestersPolicyLog{}
	return &this
}

// GetAlertId returns the AlertId field value
func (o *IngestersPolicyLog) GetAlertId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertId
}

// GetAlertIdOk returns a tuple with the AlertId field value
// and a boolean to check if the value has been set.
func (o *IngestersPolicyLog) GetAlertIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlertId, true
}

// SetAlertId sets field value
func (o *IngestersPolicyLog) SetAlertId(v string) {
	o.AlertId = v
}

// GetConfigId returns the ConfigId field value
func (o *IngestersPolicyLog) GetConfigId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConfigId
}

// GetConfigIdOk returns a tuple with the ConfigId field value
// and a boolean to check if the value has been set.
func (o *IngestersPolicyLog) GetConfigIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConfigId, true
}

// SetConfigId sets field value
func (o *IngestersPolicyLog) SetConfigId(v string) {
	o.ConfigId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *IngestersPolicyLog) GetCreatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *IngestersPolicyLog) GetCreatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *IngestersPolicyLog) SetCreatedAt(v int32) {
	o.CreatedAt = v
}

// GetDirection returns the Direction field value
func (o *IngestersPolicyLog) GetDirection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Direction
}

// GetDirectionOk returns a tuple with the Direction field value
// and a boolean to check if the value has been set.
func (o *IngestersPolicyLog) GetDirectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Direction, true
}

// SetDirection sets field value
func (o *IngestersPolicyLog) SetDirection(v string) {
	o.Direction = v
}

// GetHostName returns the HostName field value
func (o *IngestersPolicyLog) GetHostName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value
// and a boolean to check if the value has been set.
func (o *IngestersPolicyLog) GetHostNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HostName, true
}

// SetHostName sets field value
func (o *IngestersPolicyLog) SetHostName(v string) {
	o.HostName = v
}

// GetIncident returns the Incident field value
func (o *IngestersPolicyLog) GetIncident() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Incident
}

// GetIncidentOk returns a tuple with the Incident field value
// and a boolean to check if the value has been set.
func (o *IngestersPolicyLog) GetIncidentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Incident, true
}

// SetIncident sets field value
func (o *IngestersPolicyLog) SetIncident(v string) {
	o.Incident = v
}

// GetLocalIp returns the LocalIp field value
func (o *IngestersPolicyLog) GetLocalIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocalIp
}

// GetLocalIpOk returns a tuple with the LocalIp field value
// and a boolean to check if the value has been set.
func (o *IngestersPolicyLog) GetLocalIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalIp, true
}

// SetLocalIp sets field value
func (o *IngestersPolicyLog) SetLocalIp(v string) {
	o.LocalIp = v
}

// GetLocalPort returns the LocalPort field value
func (o *IngestersPolicyLog) GetLocalPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LocalPort
}

// GetLocalPortOk returns a tuple with the LocalPort field value
// and a boolean to check if the value has been set.
func (o *IngestersPolicyLog) GetLocalPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalPort, true
}

// SetLocalPort sets field value
func (o *IngestersPolicyLog) SetLocalPort(v int32) {
	o.LocalPort = v
}

// GetPolicyIndex returns the PolicyIndex field value
func (o *IngestersPolicyLog) GetPolicyIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PolicyIndex
}

// GetPolicyIndexOk returns a tuple with the PolicyIndex field value
// and a boolean to check if the value has been set.
func (o *IngestersPolicyLog) GetPolicyIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyIndex, true
}

// SetPolicyIndex sets field value
func (o *IngestersPolicyLog) SetPolicyIndex(v int32) {
	o.PolicyIndex = v
}

// GetRemoteIp returns the RemoteIp field value
func (o *IngestersPolicyLog) GetRemoteIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteIp
}

// GetRemoteIpOk returns a tuple with the RemoteIp field value
// and a boolean to check if the value has been set.
func (o *IngestersPolicyLog) GetRemoteIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteIp, true
}

// SetRemoteIp sets field value
func (o *IngestersPolicyLog) SetRemoteIp(v string) {
	o.RemoteIp = v
}

// GetRemotePort returns the RemotePort field value
func (o *IngestersPolicyLog) GetRemotePort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RemotePort
}

// GetRemotePortOk returns a tuple with the RemotePort field value
// and a boolean to check if the value has been set.
func (o *IngestersPolicyLog) GetRemotePortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemotePort, true
}

// SetRemotePort sets field value
func (o *IngestersPolicyLog) SetRemotePort(v int32) {
	o.RemotePort = v
}

// GetSeverity returns the Severity field value
func (o *IngestersPolicyLog) GetSeverity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *IngestersPolicyLog) GetSeverityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *IngestersPolicyLog) SetSeverity(v string) {
	o.Severity = v
}

func (o IngestersPolicyLog) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngestersPolicyLog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alert_id"] = o.AlertId
	toSerialize["config_id"] = o.ConfigId
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["direction"] = o.Direction
	toSerialize["host_name"] = o.HostName
	toSerialize["incident"] = o.Incident
	toSerialize["local_ip"] = o.LocalIp
	toSerialize["local_port"] = o.LocalPort
	toSerialize["policy_index"] = o.PolicyIndex
	toSerialize["remote_ip"] = o.RemoteIp
	toSerialize["remote_port"] = o.RemotePort
	toSerialize["severity"] = o.Severity
	return toSerialize, nil
}

func (o *IngestersPolicyLog) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alert_id",
		"config_id",
		"created_at",
		"direction",
		"host_name",
		"incident",
		"local_ip",
		"local_port",
		"policy_index",
		"remote_ip",
		"remote_port",
		"severity",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varIngestersPolicyLog := _IngestersPolicyLog{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varIngestersPolicyLog)

	if err != nil {
		return err
	}

	*o = IngestersPolicyLog(varIngestersPolicyLog)

	return err
}

type NullableIngestersPolicyLog struct {
	value *IngestersPolicyLog
	isSet bool
}

func (v NullableIngestersPolicyLog) Get() *IngestersPolicyLog {
	return v.value
}

func (v *NullableIngestersPolicyLog) Set(val *IngestersPolicyLog) {
	v.value = val
	v.isSet = true
}

func (v NullableIngestersPolicyLog) IsSet() bool {
	return v.isSet
}

func (v *NullableIngestersPolicyLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngestersPolicyLog(val *IngestersPolicyLog) *NullableIngestersPolicyLog {
	return &NullableIngestersPolicyLog{value: val, isSet: true}
}

func (v NullableIngestersPolicyLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngestersPolicyLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


